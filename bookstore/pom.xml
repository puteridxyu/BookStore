<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.bookstore</groupId>
	<artifactId>bookstore</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>BookStore</name>
	<description>RESTful backend for managing books and customers</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	
	<dependencies>
		<!-- Spring WebFlux for reactive REST APIs -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-webflux</artifactId>
	    </dependency>
	
		<!-- Spring Data R2DBC for reactive SQL database access -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>
		
		<!-- R2DBC PostgreSQL driver for reactive PostgreSQL access -->
		<dependency>
		    <groupId>io.r2dbc</groupId>
		    <artifactId>r2dbc-postgresql</artifactId>
		    <version>0.8.13.RELEASE</version>
		</dependency>
			
	    <!-- PostgreSQL JDBC driver for Flyway or schema.sql initialization -->
	    <dependency>
	        <groupId>org.postgresql</groupId>
	        <artifactId>postgresql</artifactId>
	        <scope>runtime</scope>
	    </dependency>
	
	    <!-- SpringDoc OpenAPI UI for Swagger documentation with WebFlux -->
	    <dependency>
	        <groupId>org.springdoc</groupId>
	        <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
	        <version>2.3.0</version>
	    </dependency>
	
	    <!-- Bean Validation (JSR 380) for DTO validation -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-validation</artifactId>
	    </dependency>
	
	    <!-- Lombok for boilerplate code reduction (getter/setter/etc.) -->
	    <dependency>
	        <groupId>org.projectlombok</groupId>
	        <artifactId>lombok</artifactId>
	        <optional>true</optional>
	    </dependency>
	
	    <!-- Spring Boot DevTools for live reload and development support -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-devtools</artifactId>
	        <scope>runtime</scope>
	        <optional>true</optional>
	    </dependency>
	
	    <!-- Reactor test utilities for verifying reactive behavior -->
	    <dependency>
	        <groupId>io.projectreactor</groupId>
	        <artifactId>reactor-test</artifactId>
	        <scope>test</scope>
	    </dependency>
	
	    <!-- Spring Boot testing starter (JUnit, Mockito, WebTestClient, etc.) -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-test</artifactId>
	        <scope>test</scope>
	        <exclusions>
	            <!-- Exclude JUnit Vintage to avoid JUnit 4 conflicts -->
	            <exclusion>
	                <groupId>org.junit.vintage</groupId>
	                <artifactId>junit-vintage-engine</artifactId>
	            </exclusion>
	        </exclusions>
	    </dependency>
	    
	    <!-- Hazelcast support for Spring cache abstraction -->
		<dependency>  
		    <groupId>com.hazelcast</groupId>
		    <artifactId>hazelcast-spring</artifactId>
		    <version>5.3.6</version>
		</dependency>
		
		<!-- Spring cache abstraction starter -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
	
	    <!-- Kafka support for event-based messaging -->
	    <dependency>
	        <groupId>org.springframework.kafka</groupId>
	        <artifactId>spring-kafka</artifactId>
	    </dependency>
	
	    <!-- Spring Data JPA (not typically used with R2DBC, included if needed for synchronous JPA) -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
	
		<!-- Spring Security for authentication/authorization -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<!-- Spring Boot Test (needed if @TestConfiguration is used in main codebase) -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-test</artifactId>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>